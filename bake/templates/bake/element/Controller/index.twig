{#
/**
 * CakePHP(tm) : Rapid Development Framework (https://cakephp.org)
 * Copyright (c) Cake Software Foundation, Inc. (https://cakefoundation.org)
 *
 * Licensed under The MIT License
 * For full copyright and license information, please see the LICENSE.txt
 * Redistributions of files must retain the above copyright notice.
 *
 * @copyright     Copyright (c) Cake Software Foundation, Inc. (https://cakefoundation.org)
 * @link          https://cakephp.org CakePHP(tm) Project
 * @since         2.0.0
 * @license       https://www.opensource.org/licenses/mit-license.php MIT License
 */
#}
    /**
     * Index method
     *
     * @return \Cake\Http\Response|null|void Renders view
     */
    public function index()
    {
        $data_search = $this->request->getQuery();
        $conditions =  array();

        if (isset($data_search['status']) && $data_search['status'] != "") {
            $conditions['{{ currentModelName }}.enabled'] = intval($data_search['status']);
        }

        if (isset($data_search['name']) && $data_search['name'] != "") {
            $conditions['LOWER({{ currentModelName }}.name) LIKE'] = '%' . trim(strtolower($data_search['name'])) . '%';
        }

{% set belongsTo = Bake.aliasExtractor(modelObj, 'BelongsTo') %}
 
        ${{ pluralName }} = $this->paginate($this->{{ currentModelName }}, [
            'contain' => {{ Bake.exportArray(belongsTo)|raw }},
            'limit' => Configure::read('web.limit'),
            'conditions' => array_merge($conditions, [
                /* '{{ currentModelName }}.enabled' => true,  */
            ]),
            'order' => [
                '{{currentModelName}}.id DESC'
            ], 
            /*
            'join' => [
                'table' => '{{ singularName }}_languages',
                'alias' => '{{ currentModelName }} Languages',
                'type' => 'INNER',
                'conditions' => [
                    '{{singularHumanName}}Languages.{{ singularName }}_id = {{ currentModelName }}.id',
                    '{{singularHumanName}}Languages.alias' => $this->lang18,
                ],
            ] 
            */
        ]);

        $this->set(compact('{{ pluralName }}', 'data_search'));
    }
